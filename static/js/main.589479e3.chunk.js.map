{"version":3,"sources":["Components/Countries.js","App.js","index.js"],"names":["Countries","search","ordering","setIsSelected","setModel","useState","countries","setCountries","fetchCountryData","a","fetch","response","json","sort","reverse","Math","random","useEffect","map","country","index","flag","name","alpha2Code","alpha3Code","nativeName","altSpellings","callingCodes","includes","className","onClick","src","alt","style","height","join","App","searchinput","setSearchInput","setOrdering","isSelected","model","console","log","area","capital","population","region","subregion","placeholder","value","onChange","event","target","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.589479e3.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport '../App.css'\n\nconst api_url = 'https://restcountries.eu/rest/v2/all'\n\nconst Countries = ({ search, ordering, setIsSelected, setModel }) => {\n  // a list of countries currently\n  const [countries, setCountries] = useState([])\n\n  const fetchCountryData = async (ordering) => {\n    const response = await fetch(api_url)\n    const countries = await response.json()\n\n    if (ordering === \"A-Z\") {\n      setCountries(countries.sort())\n    } else if (ordering === \"Z-A\") {\n      setCountries(countries.reverse())\n    } else {\n      setCountries(countries.sort(() => Math.random() - 0.5)) \n    }\n  }\n\n  useEffect(() => {\n    fetchCountryData(ordering)\n  }, [ordering])\n\n  return (\n    <div>\n      {countries.map((country, index ) => {\n        const { flag, name, alpha2Code, alpha3Code, nativeName, altSpellings, callingCodes} = country\n\n        if (name.includes(search)) {\n          return (\n            <div className=\"country\" key={index}\n              onClick={() => {\n                setIsSelected(true)\n                setModel(country)\n              }}\n            >\n              <img src={flag} alt=\"No response\"/>\n              <span className=\"name\">{name}</span>\n              <div className=\"content\">\n                <span>Alpha-2 Code : {alpha2Code}</span>\n                <span>Alpha-3 Code : {alpha3Code}</span>\n                <span>Native Name : {nativeName}</span>\n                <span>Calling Codes : {callingCodes}</span>\n                <span style={{height: '35px'}}>Alt Spellings : {altSpellings.join(', ')}</span>\n              </div>\n            </div>\n        )} else {return null}\n      })}\n    </div>\n  )\n}\n\n\nexport default Countries;\n","import React, {useState} from 'react';\nimport Countries from './Components/Countries'\n\nimport './App.css'\nimport { Input, Button } from 'antd';\n\n// const api_url = 'http://restcountries.eu'\n\nfunction App() {\n  const [searchinput, setSearchInput] = useState(\"\")\n  const [ordering, setOrdering] = useState(\"Sort\")\n  const [isSelected, setIsSelected] = useState(false)\n  const [model, setModel] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-Interface\">\n        <div className=\"title\">\n          <span>Countries Introductions</span>\n        </div>\n\n        {!isSelected ? \n          <div className=\"main\">\n            <div className=\"head\">\n              <div className=\"search-bar\">\n                <Input\n                  placeholder=\"Type any country...\"\n                  value={searchinput}\n                  onChange={(event) => setSearchInput(event.target.value)}\n                />\n              </div>\n\n              <select name=\"sort\" id=\"sort\" className=\"sort\"\n                onChange={(event) => {setOrdering(event.target.value)}}\n              >\n                <option value=\"Sort\">Sort</option>\n                <option value=\"A-Z\">A-Z</option>\n                <option value=\"Z-A\">Z-A</option>\n              </select>\n            </div>\n\n            <div className=\"countries\">\n              <Countries \n                search={searchinput}\n                ordering={ordering}\n                setIsSelected={setIsSelected}\n                setModel={setModel}\n              />\n            </div>\n          </div> : \n          <div className=\"main\">\n            <div className=\"head\">\n              <div className=\"back-button\">\n                <Button\n                  onClick={() => {\n                    setIsSelected(false)\n                    setOrdering(\"Sort\")\n                  }}\n                >Back</Button>\n              </div>\n            </div>\n\n            <div className=\"model\">\n              <div className=\"flag\">\n                <img src={model.flag} alt=\"No response\" /> \n              </div>\n\n              <div className=\"intro\">\n                {console.log(model)}\n                <span>Name : {model.name}</span>\n                <span>Alpha-2 Code : {model.alpha2Code}</span>\n                <span>Alpha-3 Code : {model.alpha3Code}</span>\n                <span>Native Name : {model.nativeName}</span>\n                <span>Calling Codes : {model.callingCodes}</span>\n                <span>Alt Spellings : {model.altSpellings.join(', ')}</span>\n                <span>Area : {model.area}</span>\n                <span>Capital : {model.capital}</span>\n                <span>Population : {model.population}</span>\n                <span>Region : {model.region}</span>\n                <span>Sub-Region : {model.subregion}</span>\n              </div>\n            </div>\n          </div>\n          }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}